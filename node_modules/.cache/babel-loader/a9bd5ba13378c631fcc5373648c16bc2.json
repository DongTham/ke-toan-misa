{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TheButton from '../base/TheButton.vue';\nimport { selectPageSize } from '../../i18n/i18nCommon';\nimport { headerTableName } from '../../i18n/i18nCommon';\nimport moment from 'moment';\nexport default {\n  name: 'TheContent',\n  components: {\n    TheButton\n  },\n  props: {},\n  emits: [],\n  created() {\n    const me = this;\n    me.getAllData();\n  },\n  methods: {\n    getAllData() {\n      const me = this;\n      fetch(`https://amis.manhnv.net/api/v1/Employees/filter?pageSize=${me.pageSize}&pageNumber=${me.pageNumber}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        me.employeeList = data.Data;\n        me.numberRecords = data.TotalRecord;\n        me.totalPages = data.TotalPage;\n      }).catch(error => {\n        if (me.pageNumber != 1) {\n          me.pageNumber = 1;\n          me.getAllData();\n        } else {\n          console.log(error);\n        }\n      });\n    },\n    convertFormatDate(date) {\n      return date ? moment(date).format('DD/MM/YYYY') : date;\n    },\n    isCheckItem(el) {\n      const me = this;\n      return me.selectedEmpolyee.includes(el);\n    },\n    checkAllItems() {\n      const me = this;\n      if (me.selectedEmpolyee.length == me.employeeList.length) {\n        me.selectedEmpolyee.length = 0;\n      } else {\n        me.selectedEmpolyee.length = 0;\n        me.employeeList.forEach(value => me.selectedEmpolyee.push(value.EmployeeId));\n      }\n    },\n    checkSingleItem(el) {\n      const me = this;\n      const index = me.selectedEmpolyee.indexOf(el);\n      if (index > -1) {\n        me.selectedEmpolyee.splice(index, 1);\n      } else {\n        me.selectedEmpolyee.push(el);\n      }\n    },\n    handleShowPageSize() {\n      const me = this;\n      me.showSelectPageSize = me.showSelectPageSize ? false : true;\n    },\n    handleSelectPageSize(el) {\n      const me = this;\n      me.showSelectPageSize = false;\n      me.selectedEmpolyee.length = 0;\n      me.pageSize = el;\n      me.getAllData();\n    },\n    handleChangePage(el) {\n      const me = this;\n      me.pageNumber = el;\n      me.selectedEmpolyee.length = 0;\n      me.getAllData();\n    },\n    handleSelectContextMenu(index) {\n      const me = this;\n      me.showSelectContextMenu = index;\n    }\n  },\n  data() {\n    return {\n      showSelectPageSize: false,\n      showSelectContextMenu: -1,\n      employeeList: [],\n      pageSize: 20,\n      pageNumber: 1,\n      numberRecords: 0,\n      totalPages: 0,\n      selectPageSize: selectPageSize,\n      headerTableName: headerTableName,\n      disableButtonPrev: true,\n      disableButtonNext: false,\n      selectedEmpolyee: []\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["TheButton","selectPageSize","headerTableName","moment","name","components","props","emits","created","me","getAllData","methods","fetch","pageSize","pageNumber","method","headers","then","res","json","data","employeeList","Data","numberRecords","TotalRecord","totalPages","TotalPage","catch","error","console","log","convertFormatDate","date","format","isCheckItem","el","selectedEmpolyee","includes","checkAllItems","length","forEach","value","push","EmployeeId","checkSingleItem","index","indexOf","splice","handleShowPageSize","showSelectPageSize","handleSelectPageSize","handleChangePage","handleSelectContextMenu","showSelectContextMenu","disableButtonPrev","disableButtonNext"],"sourceRoot":"","sources":["/Users/minhhq/Documents/ke-toan-misa/src/components/layout/TheContent.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n    <div class=\"main-header\">\n      <div class=\"main__header-wrapper\">\n        <div class=\"main__header-title\">\n          <span>Nhân viên</span>\n        </div>\n        <div class=\"main__header-add\">\n          <button @click=\"showEmployeeForm = true\" class=\"btn btn-add\">Thêm mới nhân viên</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"main-body\">\n      <div class=\"main__body-function\">\n        <div class=\"function-left\">\n          <button class=\"btn batch-operation\">\n            <div class=\"button-text align-center\">\n              <span>Thực hiện hàng loạt</span>\n              <div class=\"btn-icon btn-batch-operation\"></div>\n            </div>\n          </button>\n        </div>\n        <div class=\"function-right\">\n          <div class=\"function__search\">\n            <input type=\"text\" class=\"input-main\" placeholder=\"Tìm theo mã, tên nhân viên\" />\n            <button class=\"btn-icon btn-search\"></button>\n          </div>\n          <button class=\"btn-icon main__icon btn-reload\"></button>\n          <button class=\"btn-icon main__icon btn-export\"></button>\n          <button class=\"btn-icon main__icon btn-filter\"></button>\n        </div>\n      </div>\n      <div class=\"main__body-table\">\n        <table>\n          <thead>\n            <tr>\n              <th class=\"ms-hidden\"></th>\n              <th class=\"ms-th-viewer ms-sticky\">\n                <input\n                  type=\"checkbox\"\n                  @click=\"checkAllItems\"\n                  v-bind:checked=\"selectedEmpolyee.length == employeeList.length\"\n                />\n              </th>\n              <th class=\"ms-th-viewer\" v-for=\"(item, index) in headerTableName\" :key=\"index\">\n                {{ item.Name }}\n              </th>\n              <th class=\"ms-th-viewer ms-sticky\">Chức năng</th>\n              <th class=\"ms-hidden\"></th>\n              <th class=\"ms-hidden\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(item, index) in employeeList\" :key=\"index\" v-bind:tabindex=\"index\">\n              <td class=\"ms-hidden\"></td>\n              <td class=\"ms-td-viewer ms-sticky\">\n                <input\n                  type=\"checkbox\"\n                  @click=\"checkSingleItem(item.EmployeeId)\"\n                  v-bind:checked=\"isCheckItem(item.EmployeeId)\"\n                />\n              </td>\n              <td class=\"ms-td-viewer\">{{ item.EmployeeCode }}</td>\n              <td class=\"ms-td-viewer\">{{ item.EmployeeName }}</td>\n              <td class=\"ms-td-viewer\">\n                {{\n                  item.Gender == 0\n                    ? 'Nam'\n                    : item.Gender == 1\n                    ? 'Nữ'\n                    : item.Gender == 2\n                    ? 'Khác'\n                    : item.Gender\n                }}\n              </td>\n              <td class=\"ms-td-viewer\">{{ convertFormatDate(item.DateOfBirth) }}</td>\n              <td class=\"ms-td-viewer\">{{ item.IdentityNumber }}</td>\n              <td class=\"ms-td-viewer\">{{ item.IdentityPlace }}</td>\n              <td class=\"ms-td-viewer\">{{ item.DepartmentName }}</td>\n              <td class=\"ms-td-viewer\">{{ item.BankAccountNumber }}</td>\n              <td class=\"ms-td-viewer\">{{ item.BankName }}</td>\n              <td class=\"ms-td-viewer\">{{ item.BankBranchName }}</td>\n              <div class=\"combobox__data\" v-show=\"showSelectContextMenu == index ? true : false\">\n                <div class=\"data-item\">Nhân bản</div>\n                <div class=\"data-item\">Xóa</div>\n                <div class=\"data-item\">Ngừng sử dụng</div>\n              </div>\n\n              <td class=\"ms-td-viewer ms-sticky td-context-menu\">\n                <button class=\"btn-edit\">Sửa</button>\n                <the-button\n                  class=\"btn-selectdown combobox__button\"\n                  @click=\"handleSelectContextMenu(index)\"\n                ></the-button>\n              </td>\n              <td class=\"ms-hidden\"></td>\n              <td class=\"ms-hidden\"></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"main__body-footer\">\n        <div class=\"body__footer-left\">\n          <p>\n            Tổng số: <b>{{ numberRecords }}</b> bản ghi\n          </p>\n        </div>\n        <div class=\"body__footer-right\">\n          <div class=\"combobox select-record\">\n            <input\n              type=\"text\"\n              class=\"input-main combobox__input select__record-input\"\n              v-bind:value=\"pageSize + ' bản ghi trên 1 trang'\"\n              readonly\n            />\n            <button class=\"btn-selectdown combobox__button\" @click=\"handleShowPageSize\"></button>\n            <div class=\"combobox__data\" v-show=\"showSelectPageSize\">\n              <div\n                class=\"data-item\"\n                v-for=\"(item, index) in selectPageSize\"\n                :key=\"index\"\n                @click=\"handleSelectPageSize(item.Value)\"\n                v-bind:class=\"item.Value == pageSize ? 'active-item' : ''\"\n              >\n                {{ item.Value }} bản ghi trên 1 trang\n              </div>\n            </div>\n          </div>\n\n          <button\n            class=\"btn btn-prev\"\n            v-bind:disabled=\"pageNumber == 1 ? disableButtonPrev : !disableButtonPrev\"\n            @click=\"handleChangePage(pageNumber - 1)\"\n          >\n            Trước\n          </button>\n          <div class=\"pagination\">\n            <div\n              class=\"btn-pagination\"\n              v-for=\"(item, index) in totalPages\"\n              :key=\"index\"\n              @click=\"handleChangePage(item)\"\n              v-bind:class=\"item == pageNumber ? 'active-item' : ''\"\n            >\n              {{ item }}\n            </div>\n          </div>\n\n          <button\n            class=\"btn btn-next\"\n            v-bind:disabled=\"pageNumber == totalPages ? !disableButtonNext : disableButtonNext\"\n            @click=\"handleChangePage(pageNumber + 1)\"\n          >\n            Sau\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TheButton from '../base/TheButton.vue';\nimport { selectPageSize } from '../../i18n/i18nCommon';\nimport { headerTableName } from '../../i18n/i18nCommon';\nimport moment from 'moment';\n\nexport default {\n  name: 'TheContent',\n  components: {\n    TheButton,\n  },\n  props: {},\n  emits: [],\n  created() {\n    const me = this;\n    me.getAllData();\n  },\n  methods: {\n    getAllData() {\n      const me = this;\n      fetch(\n        `https://amis.manhnv.net/api/v1/Employees/filter?pageSize=${me.pageSize}&pageNumber=${me.pageNumber}`,\n        {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        },\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          me.employeeList = data.Data;\n          me.numberRecords = data.TotalRecord;\n          me.totalPages = data.TotalPage;\n        })\n        .catch((error) => {\n          if (me.pageNumber != 1) {\n            me.pageNumber = 1;\n            me.getAllData();\n          } else {\n            console.log(error);\n          }\n        });\n    },\n\n    convertFormatDate(date) {\n      return date ? moment(date).format('DD/MM/YYYY') : date;\n    },\n\n    isCheckItem(el) {\n      const me = this;\n      return me.selectedEmpolyee.includes(el);\n    },\n\n    checkAllItems() {\n      const me = this;\n      if (me.selectedEmpolyee.length == me.employeeList.length) {\n        me.selectedEmpolyee.length = 0;\n      } else {\n        me.selectedEmpolyee.length = 0;\n        me.employeeList.forEach((value) => me.selectedEmpolyee.push(value.EmployeeId));\n      }\n    },\n\n    checkSingleItem(el) {\n      const me = this;\n      const index = me.selectedEmpolyee.indexOf(el);\n      if (index > -1) {\n        me.selectedEmpolyee.splice(index, 1);\n      } else {\n        me.selectedEmpolyee.push(el);\n      }\n    },\n\n    handleShowPageSize() {\n      const me = this;\n      me.showSelectPageSize = me.showSelectPageSize ? false : true;\n    },\n\n    handleSelectPageSize(el) {\n      const me = this;\n      me.showSelectPageSize = false;\n      me.selectedEmpolyee.length = 0;\n      me.pageSize = el;\n      me.getAllData();\n    },\n\n    handleChangePage(el) {\n      const me = this;\n      me.pageNumber = el;\n      me.selectedEmpolyee.length = 0;\n      me.getAllData();\n    },\n\n    handleSelectContextMenu(index) {\n      const me = this;\n      me.showSelectContextMenu = index;\n    },\n  },\n  data() {\n    return {\n      showSelectPageSize: false,\n      showSelectContextMenu: -1,\n      employeeList: [],\n      pageSize: 20,\n      pageNumber: 1,\n      numberRecords: 0,\n      totalPages: 0,\n      selectPageSize: selectPageSize,\n      headerTableName: headerTableName,\n      disableButtonPrev: true,\n      disableButtonNext: false,\n      selectedEmpolyee: [],\n    };\n  },\n};\n</script>\n\n<style scoped>\n@import url(../../style/main.css);\n@import url(../../style/layout/footer.css);\n</style>\n"]},"metadata":{},"sourceType":"module"}